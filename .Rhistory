git config --global user.name "anasteinerc"
git config --global user.name "anasteinerc"
quarto::render_site()
quarto::quarto_render()
quarto::quarto_render()
quarto::install_tinytex()
install.packages("tinytex")
tinytex::install_tinytex()
tinytex::install_prebuilt()
tinytex:::is_tinytex()
quarto::quarto_render()
setwd("C:/Users/USUARIO/Documents/UCL/Term 2/GEOG0125/Week 3")
# Load the packages with library()
library('rstan')
# load up the data
respiratory_data <- read.csv("Respiratory Illness in Turin Province.csv")
respiratory_data <- read.csv("C:/Users/USUARIO/Documents/UCL/Term 2/GEOG0125/Week 3/Dataset for Week 3/Dataset for Week 3)
respiratory_data <- read.csv("C:/Users/USUARIO/Documents/UCL/Term 2/GEOG0125/Week 3/Dataset for Week 3/Dataset for Week 3)
respiratory_data <- read.csv("C:/Users/USUARIO/Documents/UCL/Term 2/GEOG0125/Week 3/Dataset for Week 3/Dataset for Week 3")
setwd("C:/Users/USUARIO/Documents/UCL/Term 2/GEOG0125/Week 3")
# Load the packages with library()
library('rstan')
respiratory_data <- read.csv("Respiratory Illness in Turin Province.csv")
install.packages("brms")
install.packages("mgcv")
install.packages("devtools")
install.packages("ggplot2")
devtools::install_github('gavinsimpson/schoenberg')
# start timer gauge how long it takes to run a GAM
ptm <- proc.time()
# run a GAM model
model.bayes.gam <- brm(bf(Overall ~ s(PM10) + s(CO) + s(NO2)),
data = respiratory_data,
family = poisson(),
prior = prior.list,
cores = 6, # replace this with number of cores on your own machine
iter = 8000,
warmup = 1000,
thin = 10,
refresh = 0,
control = list(adapt_delta = 0.99))
# Install the brms package if not already installed
if (!requireNamespace("brms", quietly = TRUE)) {
install.packages("brms")
}
# Load the brms package
library(brms)
model.bayes.gam <- brm(bf(Overall ~ s(PM10) + s(CO) + s(NO2)),
data = respiratory_data,
family = poisson(),
prior = prior.list,
cores = 6, # replace this with number of cores on your own machine
iter = 8000,
warmup = 1000,
thin = 10,
refresh = 0,
control = list(adapt_delta = 0.99))
prior.list <- get_prior(Overall ~ s(PM10) + s(CO) + s(NO2), data = respiratory_data, family = poisson())
model.bayes.gam <- brm(bf(Overall ~ s(PM10) + s(CO) + s(NO2)),
data = respiratory_data,
family = poisson(),
prior = prior.list,
cores = 6, # replace this with number of cores on your own machine
iter = 8000,
warmup = 1000,
thin = 10,
refresh = 0,
control = list(adapt_delta = 0.99))
model.bayes.gam <- brm(bf(Overall ~ s(PM10) + s(CO) + s(NO2)),
data = respiratory_data,
family = poisson(),
prior = prior.list,
cores = 6, # replace this with number of cores on your own machine
iter = 8000,
warmup = 1000,
thin = 10,
refresh = 0,
control = list(adapt_delta = 0.99))
parallel::detectCores()
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
library("rstan")
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
prior.list <- get_prior(Overall ~ s(PM10) + s(CO) + s(NO2), data = respiratory_data, family = poisson())
ptm <- proc.time()
if (!requireNamespace("brms", quietly = TRUE)) {
install.packages("brms")
}
# Load the brms package
library(brms)
model.bayes.gam <- brm(bf(Overall ~ s(PM10) + s(CO) + s(NO2)),
data = respiratory_data,
family = poisson(),
prior = prior.list,
cores = 6, # replace this with number of cores on your own machine
iter = 8000,
warmup = 1000,
thin = 10,
refresh = 0,
control = list(adapt_delta = 0.99))
model.bayes.gam <- brm(bf(Overall ~ s(PM10) + s(CO) + s(NO2)),
data = respiratory_data,
family = poisson(),
prior = prior.list,
cores = 6, # replace this with number of cores on your own machine
iter = 2000,
warmup = 500,
thin = 10,
refresh = 0,
control = list(adapt_delta = 0.8))
# run a GAM model
model.bayes.gam <- brm(bf(Overall ~ s(PM10) + s(CO) + s(NO2)),
data = respiratory_data,
family = poisson(),
prior = prior.list,
cores = 8,
iter = 2000,
warmup = 500,
thin = 10,
refresh = 0,
control = list(adapt_delta = 0.8))
rm(model.bayes.gam, prior.list, respiratory_data, ptm)
xaringan:::inf_mr()
xaringan:::inf_mr()
quarto::quarto_render("Week 4.qmd")
quarto render Week 4.qmd --to html --output-dir _book
quarto render "Week 4.qmd" --to html --output-dir _book
quarto:: quarto_render Week 4.qmd --to html --output-dir _book
quarto::quarto_render("Week 4.qmd", output_format = "html", output_dir = "_book")
quarto render "Week 4.qmd" --to html --output-dir _book
quarto render "Week 4.qmd" --to html --output-dir "_book"
quarto render
